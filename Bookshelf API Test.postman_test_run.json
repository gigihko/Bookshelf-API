{
	"id": "a10ff2ae-036c-4f5e-9e5e-14f46d17f395",
	"name": "Bookshelf API Test",
	"timestamp": "2025-02-28T01:59:18.910Z",
	"collection_id": "40477195-d7c680c4-2310-4b00-989c-d49abd63ec72",
	"folder_id": 0,
	"environment_id": "40477195-a224ff88-04a5-4909-8ebe-88c148a42f7f",
	"totalPass": 104,
	"delay": 0,
	"persist": true,
	"status": "finished",
	"startedAt": "2025-02-28T01:59:16.790Z",
	"totalFail": 0,
	"results": [
		{
			"id": "5665554b-2ad7-4e77-bc2a-6eb3681979cd",
			"name": "[Mandatory] Add Book With Complete Data",
			"url": "http://localhost:9000/books",
			"time": 19,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"status code should be 201": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true,
				"response body data should contain bookId": true
			},
			"testPassFailCounts": {
				"status code should be 201": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data should contain bookId": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				19
			],
			"allTests": [
				{
					"status code should be 201": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true,
					"response body data should contain bookId": true
				}
			]
		},
		{
			"id": "b9a552c3-9c63-42d7-82d0-e100c2e01777",
			"name": "[Mandatory] Add Book With Finished Reading",
			"url": "http://localhost:9000/books",
			"time": 5,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"status code should be 201": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true,
				"response body data should contain bookId": true
			},
			"testPassFailCounts": {
				"status code should be 201": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data should contain bookId": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"status code should be 201": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true,
					"response body data should contain bookId": true
				}
			]
		},
		{
			"id": "af8f889a-00fa-4993-86e6-df539a045f60",
			"name": "[Mandatory] Add Book Without Name",
			"url": "http://localhost:9000/books",
			"time": 5,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"status code should be 400": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true
			},
			"testPassFailCounts": {
				"status code should be 400": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"status code should be 400": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true
				}
			]
		},
		{
			"id": "3f48e277-54dc-4431-be4e-638457d4ee48",
			"name": "[Mandatory] Add Book with Page Read More Than Page Count",
			"url": "http://localhost:9000/books",
			"time": 4,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"status code should be 400": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true
			},
			"testPassFailCounts": {
				"status code should be 400": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"status code should be 400": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true
				}
			]
		},
		{
			"id": "9b3cd192-46c2-4c9b-870e-0c2496770498",
			"name": "[Mandatory] Get All Books",
			"url": "http://localhost:9000/books",
			"time": 6,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body object should have correct property and value": true,
				"response body data object should have a array books and contains two items": true,
				"the books should have contains only id, name, and publisher property": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should have a array books and contains two items": {
					"pass": 1,
					"fail": 0
				},
				"the books should have contains only id, name, and publisher property": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body object should have correct property and value": true,
					"response body data object should have a array books and contains two items": true,
					"the books should have contains only id, name, and publisher property": true
				}
			]
		},
		{
			"id": "ac81e1ee-e9a8-4286-91f1-37c2af39c158",
			"name": "[Mandatory] Get Detail Books With Correct Id",
			"url": "http://localhost:9000/books/E9qDUsMMzA3KN673",
			"time": 7,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"response code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should an object": true,
				"response body object should contain correct property and value": true,
				"response body data object should contain book object": true,
				"book object should contain correct property and value": true
			},
			"testPassFailCounts": {
				"response code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should contain correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should contain book object": {
					"pass": 1,
					"fail": 0
				},
				"book object should contain correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"response code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should an object": true,
					"response body object should contain correct property and value": true,
					"response body data object should contain book object": true,
					"book object should contain correct property and value": true
				}
			]
		},
		{
			"id": "24bf5381-744e-4335-98b1-c44f7bc1943a",
			"name": "[Mandatory] Get Detail Finished Book",
			"url": "http://localhost:9000/books/gX7P0rS4KTBJMaXa",
			"time": 4,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"response code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should an object": true,
				"response body object should contain correct property and value": true,
				"response body data object should contain book object": true,
				"book object should contain correct property and value": true
			},
			"testPassFailCounts": {
				"response code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should contain correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should contain book object": {
					"pass": 1,
					"fail": 0
				},
				"book object should contain correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"response code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should an object": true,
					"response body object should contain correct property and value": true,
					"response body data object should contain book object": true,
					"book object should contain correct property and value": true
				}
			]
		},
		{
			"id": "8ce8253f-ff7f-40b1-96ab-0458e306929d",
			"name": "[Mandatory] Get Detail Books With Invalid Id",
			"url": "http://localhost:9000/books/xxxxx",
			"time": 4,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"response code should be 404": true,
				"response header Content-Type should be application/json": true,
				"response body should an object": true,
				"response body object should contain correct property and value": true
			},
			"testPassFailCounts": {
				"response code should be 404": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should contain correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"response code should be 404": true,
					"response header Content-Type should be application/json": true,
					"response body should an object": true,
					"response body object should contain correct property and value": true
				}
			]
		},
		{
			"id": "c6e3374f-9987-4f6c-93d2-e5286d09fb99",
			"name": "[Mandatory] Update Book With Complete Data",
			"url": "http://localhost:9000/books/E9qDUsMMzA3KN673",
			"time": 4,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true,
				"when get detail books": true,
				"book object should contain updated values": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"when get detail books": {
					"pass": 1,
					"fail": 0
				},
				"book object should contain updated values": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true,
					"when get detail books": true,
					"book object should contain updated values": true
				}
			]
		},
		{
			"id": "1d82d9fb-202e-4fae-a4c1-80bed0361ed6",
			"name": "[Mandatory] Update Book Without Name",
			"url": "http://localhost:9000/books/E9qDUsMMzA3KN673",
			"time": 5,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"status code should be 400": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true
			},
			"testPassFailCounts": {
				"status code should be 400": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"status code should be 400": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true
				}
			]
		},
		{
			"id": "9c16a636-8945-4eab-9ee5-da095889ac0e",
			"name": "[Mandatory] Update Book With Page Read More Than Page Count",
			"url": "http://localhost:9000/books/E9qDUsMMzA3KN673",
			"time": 6,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"status code should be 400": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true
			},
			"testPassFailCounts": {
				"status code should be 400": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"status code should be 400": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true
				}
			]
		},
		{
			"id": "ca0f187d-8418-49a0-8075-81030154d4ca",
			"name": "[Mandatory] Update Book with Invalid Id",
			"url": "http://localhost:9000/books/xxxxx",
			"time": 4,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"status code should be 404": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true
			},
			"testPassFailCounts": {
				"status code should be 404": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"status code should be 404": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true
				}
			]
		},
		{
			"id": "8e8ee9f9-7372-46b9-8f88-bbf678a709db",
			"name": "[Mandatory] Delete Book with Correct Id",
			"url": "http://localhost:9000/books/E9qDUsMMzA3KN673",
			"time": 4,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true,
				"when get detail books": true,
				"The book should be not found": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"when get detail books": {
					"pass": 1,
					"fail": 0
				},
				"The book should be not found": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true,
					"when get detail books": true,
					"The book should be not found": true
				}
			]
		},
		{
			"id": "72574139-0974-428b-82fb-cc297fb10582",
			"name": "[Mandatory] Delete Finished book",
			"url": "http://localhost:9000/books/gX7P0rS4KTBJMaXa",
			"time": 5,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true,
				"when get detail books": true,
				"The book should be not found": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"when get detail books": {
					"pass": 1,
					"fail": 0
				},
				"The book should be not found": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true,
					"when get detail books": true,
					"The book should be not found": true
				}
			]
		},
		{
			"id": "2d38a1f9-3aff-4fb3-a7e5-354b02303c17",
			"name": "[Mandatory] Delete Book with Invalid Id",
			"url": "http://localhost:9000/books/xxxxx",
			"time": 4,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"status code should be 404": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true
			},
			"testPassFailCounts": {
				"status code should be 404": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"status code should be 404": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true
				}
			]
		},
		{
			"id": "5cdec247-2185-4c85-bb4d-4b52b270d829",
			"name": "Add Reading and Finished Book",
			"url": "http://localhost:9000/books",
			"time": 4,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				4
			],
			"allTests": [
				{}
			]
		},
		{
			"id": "7e9da82b-2e77-426d-abc8-3aa9e44ed599",
			"name": "Add Reading and Unfinished Book with \"Dicoding\" Name",
			"url": "http://localhost:9000/books",
			"time": 4,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				4
			],
			"allTests": [
				{}
			]
		},
		{
			"id": "9de72e83-5411-4091-ad2e-55059c739a1b",
			"name": "Add Unreading Books and Unfinished Book \"Dicoding\" Name",
			"url": "http://localhost:9000/books",
			"time": 3,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				3
			],
			"allTests": [
				{}
			]
		},
		{
			"id": "d60a371c-22b7-4326-912e-f78cde2cca90",
			"name": "Add Unreading Books and Unfinished Book",
			"url": "http://localhost:9000/books",
			"time": 4,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				4
			],
			"allTests": [
				{}
			]
		},
		{
			"id": "a0bd6d57-6ece-476f-b9df-1ac3149d79be",
			"name": "[Optional] Get All Reading Books",
			"url": "http://localhost:9000/books?reading=1",
			"time": 5,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body object should have correct property and value": true,
				"response body data object should have a array books and contains 2 items": true,
				"the books should have contains only id, name, and publisher property": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should have a array books and contains 2 items": {
					"pass": 1,
					"fail": 0
				},
				"the books should have contains only id, name, and publisher property": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body object should have correct property and value": true,
					"response body data object should have a array books and contains 2 items": true,
					"the books should have contains only id, name, and publisher property": true
				}
			]
		},
		{
			"id": "51bbbb41-8d28-4e25-8a38-51f33e300987",
			"name": "[Optional] Get All Unreading Books",
			"url": "http://localhost:9000/books?reading=0",
			"time": 3,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body object should have correct property and value": true,
				"response body data object should have a array books and contains at 2 items": true,
				"the books should have contains only id, name, and publisher property": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should have a array books and contains at 2 items": {
					"pass": 1,
					"fail": 0
				},
				"the books should have contains only id, name, and publisher property": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body object should have correct property and value": true,
					"response body data object should have a array books and contains at 2 items": true,
					"the books should have contains only id, name, and publisher property": true
				}
			]
		},
		{
			"id": "fc5328ee-0c69-46ad-aa73-e38d1618a4c6",
			"name": "[Optional] Get All Finished Books",
			"url": "http://localhost:9000/books?finished=1",
			"time": 5,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body object should have correct property and value": true,
				"response body data object should have a array books and contains 1 items": true,
				"the books should have contains only id, name, and publisher property": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should have a array books and contains 1 items": {
					"pass": 1,
					"fail": 0
				},
				"the books should have contains only id, name, and publisher property": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body object should have correct property and value": true,
					"response body data object should have a array books and contains 1 items": true,
					"the books should have contains only id, name, and publisher property": true
				}
			]
		},
		{
			"id": "ca372196-6a08-4cba-9aad-02919df4cdee",
			"name": "[Optional] Get All Unfinished Books",
			"url": "http://localhost:9000/books?finished=0",
			"time": 4,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body object should have correct property and value": true,
				"response body data object should have a array books and contains 3 items": true,
				"the books should have contains only id, name, and publisher property": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should have a array books and contains 3 items": {
					"pass": 1,
					"fail": 0
				},
				"the books should have contains only id, name, and publisher property": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body object should have correct property and value": true,
					"response body data object should have a array books and contains 3 items": true,
					"the books should have contains only id, name, and publisher property": true
				}
			]
		},
		{
			"id": "2dbeae99-7f55-4291-ab1c-4a7cdc9325ad",
			"name": "[Optional] Get All Books Contains \"Dicoding\" Name",
			"url": "http://localhost:9000/books?name=Dicoding",
			"time": 4,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body object should have correct property and value": true,
				"response body data object should have a array books and contains 2 items": true,
				"the books should have contains only id, name, and publisher property": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should have a array books and contains 2 items": {
					"pass": 1,
					"fail": 0
				},
				"the books should have contains only id, name, and publisher property": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body object should have correct property and value": true,
					"response body data object should have a array books and contains 2 items": true,
					"the books should have contains only id, name, and publisher property": true
				}
			]
		}
	],
	"count": 1,
	"totalTime": 122,
	"collection": {
		"requests": [
			{
				"id": "5665554b-2ad7-4e77-bc2a-6eb3681979cd",
				"method": "POST"
			},
			{
				"id": "b9a552c3-9c63-42d7-82d0-e100c2e01777",
				"method": "POST"
			},
			{
				"id": "af8f889a-00fa-4993-86e6-df539a045f60",
				"method": "POST"
			},
			{
				"id": "3f48e277-54dc-4431-be4e-638457d4ee48",
				"method": "POST"
			},
			{
				"id": "9b3cd192-46c2-4c9b-870e-0c2496770498",
				"method": "GET"
			},
			{
				"id": "ac81e1ee-e9a8-4286-91f1-37c2af39c158",
				"method": "GET"
			},
			{
				"id": "24bf5381-744e-4335-98b1-c44f7bc1943a",
				"method": "GET"
			},
			{
				"id": "8ce8253f-ff7f-40b1-96ab-0458e306929d",
				"method": "GET"
			},
			{
				"id": "c6e3374f-9987-4f6c-93d2-e5286d09fb99",
				"method": "PUT"
			},
			{
				"id": "1d82d9fb-202e-4fae-a4c1-80bed0361ed6",
				"method": "PUT"
			},
			{
				"id": "9c16a636-8945-4eab-9ee5-da095889ac0e",
				"method": "PUT"
			},
			{
				"id": "ca0f187d-8418-49a0-8075-81030154d4ca",
				"method": "PUT"
			},
			{
				"id": "8e8ee9f9-7372-46b9-8f88-bbf678a709db",
				"method": "DELETE"
			},
			{
				"id": "72574139-0974-428b-82fb-cc297fb10582",
				"method": "DELETE"
			},
			{
				"id": "2d38a1f9-3aff-4fb3-a7e5-354b02303c17",
				"method": "DELETE"
			},
			{
				"id": "5cdec247-2185-4c85-bb4d-4b52b270d829",
				"method": "POST"
			},
			{
				"id": "7e9da82b-2e77-426d-abc8-3aa9e44ed599",
				"method": "POST"
			},
			{
				"id": "9de72e83-5411-4091-ad2e-55059c739a1b",
				"method": "POST"
			},
			{
				"id": "d60a371c-22b7-4326-912e-f78cde2cca90",
				"method": "POST"
			},
			{
				"id": "a0bd6d57-6ece-476f-b9df-1ac3149d79be",
				"method": "GET"
			},
			{
				"id": "51bbbb41-8d28-4e25-8a38-51f33e300987",
				"method": "GET"
			},
			{
				"id": "fc5328ee-0c69-46ad-aa73-e38d1618a4c6",
				"method": "GET"
			},
			{
				"id": "ca372196-6a08-4cba-9aad-02919df4cdee",
				"method": "GET"
			},
			{
				"id": "2dbeae99-7f55-4291-ab1c-4a7cdc9325ad",
				"method": "GET"
			}
		]
	}
}